"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/calculate-medals";
exports.ids = ["pages/api/calculate-medals"];
exports.modules = {

/***/ "google-auth-library":
/*!**************************************!*\
  !*** external "google-auth-library" ***!
  \**************************************/
/***/ ((module) => {

module.exports = require("google-auth-library");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "google-spreadsheet":
/*!*************************************!*\
  !*** external "google-spreadsheet" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("google-spreadsheet");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-medals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-medals.ts&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-medals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-medals.ts&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_calculate_medals_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/calculate-medals.ts */ \"(api)/./pages/api/calculate-medals.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_calculate_medals_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_calculate_medals_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_calculate_medals_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_calculate_medals_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/calculate-medals\",\n        pathname: \"/api/calculate-medals\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_calculate_medals_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmNhbGN1bGF0ZS1tZWRhbHMmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmNhbGN1bGF0ZS1tZWRhbHMudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ0w7QUFDMUQ7QUFDNEQ7QUFDNUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDJEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQywyREFBUTtBQUNwQztBQUNPLHdCQUF3QixnSEFBbUI7QUFDbEQ7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90d3N0X21jX2NhbGMvP2NiNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9jYWxjdWxhdGUtbWVkYWxzLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvY2FsY3VsYXRlLW1lZGFsc1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2NhbGN1bGF0ZS1tZWRhbHNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-medals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-medals.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/googleSheets.ts":
/*!*****************************!*\
  !*** ./lib/googleSheets.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSheetData: () => (/* binding */ getSheetData)\n/* harmony export */ });\n/* harmony import */ var google_spreadsheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! google-spreadsheet */ \"google-spreadsheet\");\n/* harmony import */ var google_auth_library__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! google-auth-library */ \"google-auth-library\");\n/* harmony import */ var google_auth_library__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(google_auth_library__WEBPACK_IMPORTED_MODULE_1__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([google_spreadsheet__WEBPACK_IMPORTED_MODULE_0__]);\ngoogle_spreadsheet__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst SPREADSHEET_ID = process.env.GOOGLE_SPREADSHEET_ID;\nconst GOOGLE_CLIENT_EMAIL = process.env.GOOGLE_CLIENT_EMAIL;\nconst GOOGLE_PRIVATE_KEY = process.env.GOOGLE_PRIVATE_KEY ? process.env.GOOGLE_PRIVATE_KEY.replace(/\\\\n/g, \"\\n\").replace(/\"/g, \"\") : undefined;\nif (!SPREADSHEET_ID || !GOOGLE_CLIENT_EMAIL || !GOOGLE_PRIVATE_KEY) {\n    console.error(\"Missing Google Sheets credentials\");\n    throw new Error(\"Missing Google Sheets credentials\");\n}\nconst serviceAccountAuth = new google_auth_library__WEBPACK_IMPORTED_MODULE_1__.JWT({\n    email: GOOGLE_CLIENT_EMAIL,\n    key: GOOGLE_PRIVATE_KEY,\n    scopes: [\n        \"https://www.googleapis.com/auth/spreadsheets.readonly\"\n    ]\n});\nconst doc = new google_spreadsheet__WEBPACK_IMPORTED_MODULE_0__.GoogleSpreadsheet(SPREADSHEET_ID, serviceAccountAuth);\nasync function getSheetData(sheetTitle) {\n    try {\n        console.log(`Loading sheet: ${sheetTitle}`);\n        await doc.loadInfo();\n        const sheet = doc.sheetsByTitle[sheetTitle];\n        if (!sheet) {\n            console.error(`Sheet not found: ${sheetTitle}`);\n            throw new Error(`Sheet not found: ${sheetTitle}`);\n        }\n        console.log(`Fetching rows from sheet: ${sheetTitle}`);\n        const rows = await sheet.getRows();\n        console.log(`Fetched ${rows.length} rows from sheet: ${sheetTitle}`);\n        return rows.map((row)=>row.toObject());\n    } catch (error) {\n        console.error(`Error fetching data from sheet ${sheetTitle}:`, error);\n        throw error;\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZ29vZ2xlU2hlZXRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBdUQ7QUFDYjtBQUUxQyxNQUFNRSxpQkFBaUJDLFFBQVFDLEdBQUcsQ0FBQ0MscUJBQXFCO0FBQ3hELE1BQU1DLHNCQUFzQkgsUUFBUUMsR0FBRyxDQUFDRSxtQkFBbUI7QUFDM0QsTUFBTUMscUJBQXFCSixRQUFRQyxHQUFHLENBQUNHLGtCQUFrQixHQUNyREosUUFBUUMsR0FBRyxDQUFDRyxrQkFBa0IsQ0FBQ0MsT0FBTyxDQUFDLFFBQVEsTUFBTUEsT0FBTyxDQUFDLE1BQU0sTUFDbkVDO0FBRUosSUFBSSxDQUFDUCxrQkFBa0IsQ0FBQ0ksdUJBQXVCLENBQUNDLG9CQUFvQjtJQUNsRUcsUUFBUUMsS0FBSyxDQUFDO0lBQ2QsTUFBTSxJQUFJQyxNQUFNO0FBQ2xCO0FBRUEsTUFBTUMscUJBQXFCLElBQUlaLG9EQUFHQSxDQUFDO0lBQ2pDYSxPQUFPUjtJQUNQUyxLQUFLUjtJQUNMUyxRQUFRO1FBQ047S0FDRDtBQUNIO0FBRUEsTUFBTUMsTUFBTSxJQUFJakIsaUVBQWlCQSxDQUFDRSxnQkFBZ0JXO0FBRTNDLGVBQWVLLGFBQWFDLFVBQWtCO0lBQ25ELElBQUk7UUFDRlQsUUFBUVUsR0FBRyxDQUFDLENBQUMsZUFBZSxFQUFFRCxXQUFXLENBQUM7UUFDMUMsTUFBTUYsSUFBSUksUUFBUTtRQUNsQixNQUFNQyxRQUFRTCxJQUFJTSxhQUFhLENBQUNKLFdBQVc7UUFDM0MsSUFBSSxDQUFDRyxPQUFPO1lBQ1ZaLFFBQVFDLEtBQUssQ0FBQyxDQUFDLGlCQUFpQixFQUFFUSxXQUFXLENBQUM7WUFDOUMsTUFBTSxJQUFJUCxNQUFNLENBQUMsaUJBQWlCLEVBQUVPLFdBQVcsQ0FBQztRQUNsRDtRQUNBVCxRQUFRVSxHQUFHLENBQUMsQ0FBQywwQkFBMEIsRUFBRUQsV0FBVyxDQUFDO1FBQ3JELE1BQU1LLE9BQU8sTUFBTUYsTUFBTUcsT0FBTztRQUNoQ2YsUUFBUVUsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFSSxLQUFLRSxNQUFNLENBQUMsa0JBQWtCLEVBQUVQLFdBQVcsQ0FBQztRQUNuRSxPQUFPSyxLQUFLRyxHQUFHLENBQUNDLENBQUFBLE1BQU9BLElBQUlDLFFBQVE7SUFDckMsRUFBRSxPQUFPbEIsT0FBTztRQUNkRCxRQUFRQyxLQUFLLENBQUMsQ0FBQywrQkFBK0IsRUFBRVEsV0FBVyxDQUFDLENBQUMsRUFBRVI7UUFDL0QsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHdzdF9tY19jYWxjLy4vbGliL2dvb2dsZVNoZWV0cy50cz9iNzgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdvb2dsZVNwcmVhZHNoZWV0IH0gZnJvbSAnZ29vZ2xlLXNwcmVhZHNoZWV0JztcbmltcG9ydCB7IEpXVCB9IGZyb20gJ2dvb2dsZS1hdXRoLWxpYnJhcnknO1xuXG5jb25zdCBTUFJFQURTSEVFVF9JRCA9IHByb2Nlc3MuZW52LkdPT0dMRV9TUFJFQURTSEVFVF9JRDtcbmNvbnN0IEdPT0dMRV9DTElFTlRfRU1BSUwgPSBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0VNQUlMO1xuY29uc3QgR09PR0xFX1BSSVZBVEVfS0VZID0gcHJvY2Vzcy5lbnYuR09PR0xFX1BSSVZBVEVfS0VZIFxuICA/IHByb2Nlc3MuZW52LkdPT0dMRV9QUklWQVRFX0tFWS5yZXBsYWNlKC9cXFxcbi9nLCAnXFxuJykucmVwbGFjZSgvXCIvZywgJycpXG4gIDogdW5kZWZpbmVkO1xuXG5pZiAoIVNQUkVBRFNIRUVUX0lEIHx8ICFHT09HTEVfQ0xJRU5UX0VNQUlMIHx8ICFHT09HTEVfUFJJVkFURV9LRVkpIHtcbiAgY29uc29sZS5lcnJvcignTWlzc2luZyBHb29nbGUgU2hlZXRzIGNyZWRlbnRpYWxzJyk7XG4gIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBHb29nbGUgU2hlZXRzIGNyZWRlbnRpYWxzJyk7XG59XG5cbmNvbnN0IHNlcnZpY2VBY2NvdW50QXV0aCA9IG5ldyBKV1Qoe1xuICBlbWFpbDogR09PR0xFX0NMSUVOVF9FTUFJTCxcbiAga2V5OiBHT09HTEVfUFJJVkFURV9LRVksXG4gIHNjb3BlczogW1xuICAgICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL3NwcmVhZHNoZWV0cy5yZWFkb25seScsXG4gIF0sXG59KTtcblxuY29uc3QgZG9jID0gbmV3IEdvb2dsZVNwcmVhZHNoZWV0KFNQUkVBRFNIRUVUX0lELCBzZXJ2aWNlQWNjb3VudEF1dGgpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2hlZXREYXRhKHNoZWV0VGl0bGU6IHN0cmluZykge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKGBMb2FkaW5nIHNoZWV0OiAke3NoZWV0VGl0bGV9YCk7XG4gICAgYXdhaXQgZG9jLmxvYWRJbmZvKCk7XG4gICAgY29uc3Qgc2hlZXQgPSBkb2Muc2hlZXRzQnlUaXRsZVtzaGVldFRpdGxlXTtcbiAgICBpZiAoIXNoZWV0KSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBTaGVldCBub3QgZm91bmQ6ICR7c2hlZXRUaXRsZX1gKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgU2hlZXQgbm90IGZvdW5kOiAke3NoZWV0VGl0bGV9YCk7XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKGBGZXRjaGluZyByb3dzIGZyb20gc2hlZXQ6ICR7c2hlZXRUaXRsZX1gKTtcbiAgICBjb25zdCByb3dzID0gYXdhaXQgc2hlZXQuZ2V0Um93cygpO1xuICAgIGNvbnNvbGUubG9nKGBGZXRjaGVkICR7cm93cy5sZW5ndGh9IHJvd3MgZnJvbSBzaGVldDogJHtzaGVldFRpdGxlfWApO1xuICAgIHJldHVybiByb3dzLm1hcChyb3cgPT4gcm93LnRvT2JqZWN0KCkpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIGZldGNoaW5nIGRhdGEgZnJvbSBzaGVldCAke3NoZWV0VGl0bGV9OmAsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbIkdvb2dsZVNwcmVhZHNoZWV0IiwiSldUIiwiU1BSRUFEU0hFRVRfSUQiLCJwcm9jZXNzIiwiZW52IiwiR09PR0xFX1NQUkVBRFNIRUVUX0lEIiwiR09PR0xFX0NMSUVOVF9FTUFJTCIsIkdPT0dMRV9QUklWQVRFX0tFWSIsInJlcGxhY2UiLCJ1bmRlZmluZWQiLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsInNlcnZpY2VBY2NvdW50QXV0aCIsImVtYWlsIiwia2V5Iiwic2NvcGVzIiwiZG9jIiwiZ2V0U2hlZXREYXRhIiwic2hlZXRUaXRsZSIsImxvZyIsImxvYWRJbmZvIiwic2hlZXQiLCJzaGVldHNCeVRpdGxlIiwicm93cyIsImdldFJvd3MiLCJsZW5ndGgiLCJtYXAiLCJyb3ciLCJ0b09iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/googleSheets.ts\n");

/***/ }),

/***/ "(api)/./pages/api/calculate-medals.ts":
/*!***************************************!*\
  !*** ./pages/api/calculate-medals.ts ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_googleSheets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/googleSheets */ \"(api)/./lib/googleSheets.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_googleSheets__WEBPACK_IMPORTED_MODULE_0__]);\n_lib_googleSheets__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst qualityPoints = {\n    high: 30,\n    medium: 20,\n    low: 10\n};\n// strictnessの数値を評価タイプに変換する関数\nfunction getJudgeType(strictness) {\n    switch(strictness){\n        case 1:\n            return \"generous\";\n        case 2:\n            return \"slightly_generous\";\n        case 3:\n            return \"normal\";\n        case 4:\n            return \"strict\";\n        default:\n            return \"normal\";\n    }\n}\n// judges配列を動的に生成する関数\nasync function getJudges() {\n    try {\n        const judgeConfigs = await (0,_lib_googleSheets__WEBPACK_IMPORTED_MODULE_0__.getSheetData)(\"Judges\");\n        const judges = [];\n        for (const config of judgeConfigs){\n            const count = parseInt(config.number.toString());\n            const strictness = parseInt(config.strictness.toString());\n            if (isNaN(count) || isNaN(strictness)) continue;\n            const judgeType = getJudgeType(strictness);\n            const judge = {\n                type: judgeType,\n                evaluate: (avg)=>{\n                    switch(judgeType){\n                        case \"generous\":\n                            if (avg >= 16) return 10;\n                            if (avg === 15) return 9;\n                            if (avg >= 11) return 8;\n                            if (avg === 10) return 7;\n                            return 3;\n                        case \"slightly_generous\":\n                            if (avg >= 20) return 10;\n                            if (avg >= 16) return 9;\n                            if (avg === 15) return 8;\n                            if (avg >= 11) return 7;\n                            if (avg === 10) return 6;\n                            return 3;\n                        case \"normal\":\n                            if (avg >= 21) return 10;\n                            if (avg === 20) return 9;\n                            if (avg >= 16) return 8;\n                            if (avg === 15) return 7;\n                            if (avg >= 11) return 6;\n                            if (avg === 10) return 5;\n                            return 3;\n                        case \"strict\":\n                            if (avg >= 26) return 10;\n                            if (avg === 25) return 9;\n                            if (avg >= 21) return 8;\n                            if (avg === 20) return 7;\n                            if (avg >= 16) return 6;\n                            if (avg === 15) return 5;\n                            if (avg >= 11) return 4;\n                            if (avg === 10) return 3;\n                            return 3;\n                        default:\n                            return 3;\n                    }\n                }\n            };\n            // 指定された数だけjudgeを追加\n            for(let i = 0; i < count; i++){\n                judges.push(judge);\n            }\n        }\n        console.log(\"Loaded judges:\", judges.map((j)=>j.type));\n        return judges;\n    } catch (error) {\n        console.error(\"Error loading judges:\", error);\n        throw error;\n    }\n}\n// APIハンドラーを非同期関数に変更\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        try {\n            const { stock, recipes } = req.body;\n            console.log(\"Received request:\", JSON.stringify({\n                stock,\n                recipes\n            }, null, 2));\n            if (!stock || !recipes || !Array.isArray(recipes)) {\n                throw new Error(\"Invalid input data\");\n            }\n            // 審査員の構成を読み込む\n            const judges = await getJudges();\n            // レシピの ingredients を解析\n            const parsedRecipes = recipes.map((recipe)=>({\n                    ...recipe,\n                    ingredients: JSON.parse(recipe.ingredients),\n                    madols: parseInt(recipe.madols)\n                }));\n            const result = calculateOptimalRecipes(stock, parsedRecipes, judges);\n            console.log(\"Calculation result:\", JSON.stringify(result, null, 2));\n            res.status(200).json(result);\n        } catch (error) {\n            console.error(\"Error in calculate-medals:\", error);\n            res.status(500).json({\n                error: \"Internal Server Error\",\n                details: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n    } else {\n        res.status(405).end();\n    }\n}\n// calculateOptimalRecipes関数を修正して judges を引数として受け取る\nfunction calculateOptimalRecipes(stock, recipes, judges) {\n    let optimalRecipes = {};\n    let totalMedals = 0;\n    let totalMadols = 0;\n    let charcoalDetails = [];\n    let recipeDetails = [];\n    let currentStock = JSON.parse(JSON.stringify(stock));\n    while(true){\n        let bestRecipe = null;\n        let bestMedals = 0;\n        let bestUsedMaterials = null;\n        // 通常のシピを試す\n        for (const recipe of recipes){\n            if (canMake(currentStock, recipe.ingredients)) {\n                // 各レシピに対して、低品質優先と高品質優先の両方を試す\n                const lowQualityFirst = simulateRecipe(currentStock, recipe, true, judges);\n                const highQualityFirst = simulateRecipe(currentStock, recipe, false, judges);\n                // より多くのメダルが獲得できる方を選択\n                if (lowQualityFirst.medals > bestMedals) {\n                    bestMedals = lowQualityFirst.medals;\n                    bestRecipe = recipe;\n                    bestUsedMaterials = lowQualityFirst.materials;\n                }\n                if (highQualityFirst.medals > bestMedals) {\n                    bestMedals = highQualityFirst.medals;\n                    bestRecipe = recipe;\n                    bestUsedMaterials = highQualityFirst.materials;\n                }\n            }\n        }\n        // レシピが見つからない場合は炭を作る処理（既存のコド）\n        if (bestRecipe === null) {\n            const charcoalResult = tryMakeCharcoal(currentStock);\n            if (charcoalResult) {\n                console.log(\"Making charcoal with remaining materials\");\n                optimalRecipes[\"炭\"] = (optimalRecipes[\"炭\"] || 0) + charcoalResult.combinations[0].count;\n                totalMedals += 3 * charcoalResult.combinations[0].count;\n                totalMadols += 350 * charcoalResult.combinations[0].count;\n                charcoalDetails.push(...charcoalResult.combinations);\n                useIngredients(currentStock, charcoalResult.usedIngredients);\n                continue;\n            }\n            break;\n        }\n        // 選択されたレシピの実行\n        if (bestUsedMaterials) {\n            // 使用する材料を在庫から減らす\n            for (const material of bestUsedMaterials){\n                const materialStock = currentStock[material.materialCode];\n                if (materialStock) {\n                    materialStock.high -= material.high;\n                    materialStock.medium -= material.medium;\n                    materialStock.low -= material.low;\n                }\n            }\n            recipeDetails.push({\n                recipeName: bestRecipe.name,\n                count: 1,\n                materials: bestUsedMaterials,\n                medals: bestMedals,\n                madols: bestRecipe.madols\n            });\n            optimalRecipes[bestRecipe.name] = (optimalRecipes[bestRecipe.name] || 0) + 1;\n            totalMedals += bestMedals;\n            totalMadols += bestRecipe.madols;\n        }\n    }\n    return {\n        recipes: optimalRecipes,\n        medals: totalMedals,\n        madols: totalMadols,\n        charcoalDetails: charcoalDetails.length > 0 ? charcoalDetails : undefined,\n        recipeDetails\n    };\n}\n// simulateRecipe関数を修正して judges を引数として受け取る\nfunction simulateRecipe(stock, recipe, lowQualityFirst, judges) {\n    const tempStock = JSON.parse(JSON.stringify(stock));\n    const usedMaterials = [];\n    let totalPoints = 0;\n    let totalIngredients = 0;\n    for(const materialCode in recipe.ingredients){\n        const requiredAmount = recipe.ingredients[materialCode];\n        if (requiredAmount > 0) {\n            const materialStock = tempStock[materialCode];\n            const detail = {\n                materialCode,\n                high: 0,\n                medium: 0,\n                low: 0\n            };\n            let remainingAmount = requiredAmount;\n            const qualities = lowQualityFirst ? [\n                \"low\",\n                \"medium\",\n                \"high\"\n            ] : [\n                \"high\",\n                \"medium\",\n                \"low\"\n            ];\n            for (const quality of qualities){\n                const availableQuantity = materialStock[quality];\n                const usedQuantity = Math.min(availableQuantity, remainingAmount);\n                detail[quality] = usedQuantity;\n                totalPoints += qualityPoints[quality] * usedQuantity;\n                remainingAmount -= usedQuantity;\n                if (remainingAmount <= 0) break;\n            }\n            totalIngredients += requiredAmount;\n            usedMaterials.push(detail);\n        }\n    }\n    const averagePoints = Math.floor(totalPoints / totalIngredients);\n    const allJudgesPoints = judges.map((judge)=>judge.evaluate(averagePoints));\n    const totalScore = allJudgesPoints.reduce((sum, points)=>sum + points, 0);\n    const medals = Math.max(Math.floor(totalScore * 30 / 100), 3);\n    return {\n        medals,\n        materials: usedMaterials\n    };\n}\n// 炭を作れるか確認し、作れる場合は使用する材料を返す\nfunction tryMakeCharcoal(stock) {\n    let availableMaterials = [];\n    // 利用可能な材料とその数量を集計\n    for(const materialCode in stock){\n        const materialStock = stock[materialCode];\n        const totalQuantity = Object.values(materialStock).reduce((sum, qty)=>sum + qty, 0);\n        if (totalQuantity >= 1) {\n            availableMaterials.push({\n                code: materialCode,\n                quantity: totalQuantity\n            });\n        }\n    }\n    // 2種類以上の材料がない場合は炭を作れない\n    if (availableMaterials.length < 2) {\n        return null;\n    }\n    // 材料の組み合わせを作成\n    const combinations = [];\n    const usedIngredients = {};\n    // 最初の2つの材料を使用して炭を作る\n    const material1 = availableMaterials[0];\n    const material2 = availableMaterials[1];\n    // 両方の材料の最小値を取得（これが作れる炭の数）\n    const charcoalCount = Math.min(material1.quantity, material2.quantity);\n    combinations.push({\n        materials: [\n            material1.code,\n            material2.code\n        ],\n        count: charcoalCount\n    });\n    usedIngredients[material1.code] = charcoalCount;\n    usedIngredients[material2.code] = charcoalCount;\n    return {\n        usedIngredients: usedIngredients,\n        combinations\n    };\n}\nfunction canMake(stock, ingredients) {\n    for(const materialCode in ingredients){\n        const requiredAmount = parseInt(ingredients[materialCode]) || 0;\n        if (requiredAmount > 0) {\n            const materialStock = stock[materialCode];\n            if (!materialStock) {\n                console.log(\"Material not found in stock:\", materialCode);\n                return false;\n            }\n            const availableQuantity = Object.values(materialStock).reduce((sum, qty)=>sum + qty, 0);\n            if (availableQuantity < requiredAmount) {\n                console.log(\"Not enough material:\", materialCode, \"Required:\", requiredAmount, \"Available:\", availableQuantity);\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction useIngredients(stock, ingredients) {\n    for(const materialKey in ingredients){\n        const requiredAmount = ingredients[materialKey] || 0;\n        if (requiredAmount > 0) {\n            let remainingAmount = requiredAmount;\n            const materialStock = stock[materialKey];\n            if (materialStock) {\n                for(const quality in qualityPoints){\n                    const qualityKey = quality;\n                    const availableQuantity = materialStock[qualityKey];\n                    const usedQuantity = Math.min(availableQuantity, remainingAmount);\n                    materialStock[qualityKey] -= usedQuantity;\n                    remainingAmount -= usedQuantity;\n                    if (remainingAmount <= 0) break;\n                }\n            }\n        }\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/calculate-medals.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fcalculate-medals&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fcalculate-medals.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();